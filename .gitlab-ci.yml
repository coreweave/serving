# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

default:
   image: golang:latest
   tags:
      - ord1-tenant

variables:
  # Please edit to your GitLab project
  REPO_NAME: github.com/coreweave/serving
  KO_DOCKER_REPO: $CI_REGISTRY_IMAGE

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p "$GOPATH/src/$(dirname $REPO_NAME)"
  - ln -svf "$CI_PROJECT_DIR" "$GOPATH/src/$REPO_NAME"
  - cd "$GOPATH/src/$REPO_NAME"
  - go install github.com/google/ko@latest

stages:
  - test
  - build
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    # - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  before_script:
    - | # Generate registry credentials
      echo "Build triggered by $CI_PIPELINE_SOURCE"
      echo "Generating registry auth in ${HOME}/.docker/config.json"
      mkdir -p ${HOME}/.docker
      echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > ${HOME}/.docker/config.json
      
    - | # Install ko
      tag=$(curl -s https://api.github.com/repos/google/ko/releases/latest | jq -r '.tag_name')
      
      echo "Installing ko @ ${tag} for amd64"
      curl -fsL https://github.com/google/ko/releases/download/${tag}/ko_${tag:1}_amd64_x86_64.tar.gz | sudo tar xzf - -C /usr/local/bin ko

  script:
    - ko build config/core/ --tarball knative-serving.tar -t $CI_COMMIT_REF_SLUG
  artifacts:
    paths:
      - knative-serving.tar
